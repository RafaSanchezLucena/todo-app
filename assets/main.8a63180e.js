const u=function(){const r=document.createElement("link").relList;if(r&&r.supports&&r.supports("modulepreload"))return;for(const s of document.querySelectorAll('link[rel="modulepreload"]'))e(s);new MutationObserver(s=>{for(const n of s)if(n.type==="childList")for(const l of n.addedNodes)l.tagName==="LINK"&&l.rel==="modulepreload"&&e(l)}).observe(document,{childList:!0,subtree:!0});function o(s){const n={};return s.integrity&&(n.integrity=s.integrity),s.referrerpolicy&&(n.referrerPolicy=s.referrerpolicy),s.crossorigin==="use-credentials"?n.credentials="include":s.crossorigin==="anonymous"?n.credentials="omit":n.credentials="same-origin",n}function e(s){if(s.ep)return;s.ep=!0;const n=o(s);fetch(s.href,n)}};u();const a=document.querySelector(".container-tasks");document.querySelector(".container-form").innerHTML=`<label for="inputText" class="tarea fs-2">Nueva tarea:</label>
        <input autocomplete="off" id="inputText" onchange="newTask()" type="text" class="form-control" autofocus placeholder="Introduce el texto">`;var i=[];const m=()=>{a.innerHTML=" ";const t=JSON.parse(localStorage.getItem("tasks"));if(t!=null){const r=t.map((o,e)=>`<div id="${e}" class="task animate__animated">
                                <div class="form-check">
                                  <input onchange="done(${e})" value="true" class="form-check-input" type="checkbox" id="${e+100}">
                                    <label class="form-check-label" for="defaultCheck1">
                                    <p class="h5">${o.description}</p>
                                    </label>
                                </div>
                                  
                                  <button id="${e+150}" class="icon" onclick="deleteTask(${e})" ><span title="Eliminar" class="material-symbols-outlined">delete</span></button>
                                  <button id="${e+200}" class="icon" onclick="setPriority(${e})" ><span title="Prioridad alta" class="material-symbols-outlined">priority_high</span></button>
                                </div>`);a.innerHTML=r.join(""),t.forEach((o,e)=>{if(o.new===!0&&(document.getElementById(e).classList.add("animate__zoomIn"),setTimeout(()=>{document.getElementById(e).classList.remove("animate__zoomIn")},1e3)),o.done===!0){let s=e+100;document.getElementById(e).classList.add("task--done"),document.getElementById(s).checked=!0}if(o.priority==="high"){let s=e+150,n=e+200;document.getElementById(e).classList.add("priority--high"),document.getElementById(s).classList.add("icon--priority"),document.getElementById(n).classList.add("icon--priority")}}),t.forEach(o=>i.push(o))}};m();window.newTask=()=>{let r={description:inputText.value,done:!1,priority:"low",new:!1};i.push(r),localStorage.setItem("tasks",JSON.stringify(i)),c()};const c=()=>{a.innerHTML=" ";const t=JSON.parse(localStorage.getItem("tasks")),r=t.map((o,e)=>`<div id="${e}" class="task animate__animated">
                                <div class="form-check">
                                  <input onchange="done(${e})" value="true" class="form-check-input" type="checkbox" id="${e+100}">
                                    <label class="form-check-label" for="defaultCheck1"> <p class="h5">${o.description}</p></label>
                                    
                                </div>
                                  
                                  <button id="${e+150}" class="icon" onclick="deleteTask(${e})" ><span title="Eliminar" class="material-symbols-outlined">delete</span></button>
                                  <button id="${e+200}" class="icon" onclick="setPriority(${e})" ><span title="Prioridad alta" class="material-symbols-outlined">priority_high</span></button>
                                </div>`);inputText.value="",a.innerHTML=r.join(""),t.forEach((o,e)=>{if(o.new===!1&&(document.getElementById(e).classList.add("animate__zoomIn"),i[e].new=!0,localStorage.setItem("tasks",JSON.stringify(i)),setTimeout(()=>{document.getElementById(e).classList.remove("animate__zoomIn")},1e3)),o.done===!0){let s=e+100;document.getElementById(e).classList.add("task--done"),document.getElementById(s).checked=!0}if(o.priority==="high"){let s=e+150,n=e+200;document.getElementById(e).classList.add("priority--high"),document.getElementById(s).classList.add("icon--priority"),document.getElementById(n).classList.add("icon--priority")}})};window.deleteTask=t=>{document.getElementById(t).classList.add("animate__zoomOut"),setTimeout(()=>{i.splice(t,1),localStorage.setItem("tasks",JSON.stringify(i)),c()},500)};const p=t=>t.sort((o,e)=>o.priority<e.priority?-1:o.priority>e.priority?1:0);window.setPriority=t=>{let r=t+150,o=t+200;i[t].priority==="low"?i[t].priority="high":i[t].priority="low",i[t].priority==="high"?(document.getElementById(t).classList.add("priority--high"),document.getElementById(r).classList.add("icon--priority"),document.getElementById(o).classList.add("icon--priority")):(document.getElementById(t).classList.remove("priority--high"),document.getElementById(r).classList.remove("icon--priority"),document.getElementById(o).classList.remove("icon--priority")),p(i),localStorage.setItem("tasks",JSON.stringify(i)),setTimeout(()=>{c()},400)};window.done=t=>{i[t].done===!1?i[t].done=!0:i[t].done=!1,i[t].done===!0?document.getElementById(t).classList.add("task--done"):(document.getElementById(t).classList.add("task--nodone"),document.getElementById(t).classList.remove("task--done")),localStorage.setItem("tasks",JSON.stringify(i))};document.querySelector(".container-search").innerHTML=`
  <div>
   <h3><strong>Busca:</strong></h3>
   <input type="file" class="input btn btn-primary" onchange="readFile(this)" id="inputFile" >
   <p class="aviso" style="color:#DC3545">Archivo de datos requerido.</p>
   <input type="text" class="form-control" onkeyup="searchNumber(value)" id="introduccion" placeholder="Introduce los datos..." >
   <h5><strong>Resultado de la b\xFAsqueda:</strong></h5>
   <ul class="lista"></ul>
  </div>
`;const d=[];window.readFile=t=>{document.querySelector(".aviso").innerHTML=" ";let r=t.files[0],o=new FileReader;o.readAsText(r),o.onload=()=>{JSON.parse(o.result).forEach(s=>{d.push(s)})},o.onerror=()=>{document.querySelector(".lista").innerHTML=`Ha ocurrido el siguiente error: ${o.error}`}};window.searchNumber=t=>{if(t!=""){const o=d.filter(e=>e.nombre.toLowerCase().includes(t.toLowerCase())).map(e=>`<li>${e.nombre}: <strong>${e.numero}</strong> </li>`);document.querySelector(".lista").innerHTML=o.join(" ")}else document.querySelector(".lista").innerHTML="<h5>Sin resultados...</h5>"};
