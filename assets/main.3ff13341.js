const k=function(){const a=document.createElement("link").relList;if(a&&a.supports&&a.supports("modulepreload"))return;for(const s of document.querySelectorAll('link[rel="modulepreload"]'))e(s);new MutationObserver(s=>{for(const i of s)if(i.type==="childList")for(const r of i.addedNodes)r.tagName==="LINK"&&r.rel==="modulepreload"&&e(r)}).observe(document,{childList:!0,subtree:!0});function o(s){const i={};return s.integrity&&(i.integrity=s.integrity),s.referrerpolicy&&(i.referrerPolicy=s.referrerpolicy),s.crossorigin==="use-credentials"?i.credentials="include":s.crossorigin==="anonymous"?i.credentials="omit":i.credentials="same-origin",i}function e(s){if(s.ep)return;s.ep=!0;const i=o(s);fetch(s.href,i)}};k();const I=document.querySelector(".app"),L=document.querySelector(".modal"),v={method:"GET",headers:{"X-RapidAPI-Key":"46b09705b0msh419e77df9426930p19b7e4jsn2eb1d4271df5","X-RapidAPI-Host":"weatherapi-com.p.rapidapi.com"}},c=async t=>{try{const o=await(await fetch(`https://weatherapi-com.p.rapidapi.com/forecast.json?q=${t}&days=3`,v)).json();let{current:e,location:s}=o,{condition:i,humidity:r,temp_c:p,precip_in:y,feelslike_c:g}=e,{region:f,country:h}=s,{icon:b}=i;I.innerHTML=`<div class="weather">
                      <div class="header">
                      <span class="poblacion">${t}</span>
                      <button  title="Elige otra poblaci\xF3n." type="button" id="icono" onclick="changeCity()" class="icono"><span class="material-symbols-outlined"> settings </span></button><br>

                      <span class="region">${f}</span>
                      <span class="country">(${h})</span>
                      <br></div>
                      <span><strong>Temp:</strong> ${p}\xBA,</span>
                      <span><strong>Sensaci\xF3n:</strong> ${g}\xBA</span><br>
                      <span><strong>Humedad:</strong> ${r}%,</span>
                      <span><strong>Lluvia hoy:</strong> ${y}mm</span><br>
                      <img src="${b}"/>                   
                    </div>
    `}catch{L.classList.add("modal--show")}},E=document.querySelector(".modal__close"),u=document.querySelector(".modal__input"),d=document.querySelector(".modal"),S=()=>{try{let t=JSON.parse(localStorage.getItem("city"));c(t.nombre),setInterval(c,3e5,t.nombre)}catch{d.classList.add("modal--show")}};window.changeCity=()=>{d.classList.add("modal--show")};E.addEventListener("click",()=>{let t=u.value,a={nombre:t};localStorage.setItem("city",JSON.stringify(a));let o=JSON.parse(localStorage.getItem("city"));t!=""&&t!=null?(c(o.nombre),setInterval(c,3e5,o.nombre),d.classList.remove("modal--show")):alert("Campo obligatorio"),u.value=""});const l=document.querySelector(".container-tasks");document.querySelector(".container-form").innerHTML=`<label for="inputText" class="tarea fs-2">Nueva tarea:</label>
        <input autocomplete="off" id="inputText" onchange="newTask()" type="text" class="form-control" autofocus placeholder="Introduce el texto">`;var n=[];const $=()=>{l.innerHTML=" ";const t=JSON.parse(localStorage.getItem("tasks"));if(t!=null){const a=t.map((o,e)=>`<div id="${e}" class="task animate__animated">
                                <div class="form-check">
                                  <input onchange="done(${e})" value="true" class="form-check-input" type="checkbox" id="${e+100}">
                                    <label class="form-check-label" for="defaultCheck1">
                                    <p class="h5">${o.description}</p>
                                    </label>
                                </div>
                                  
                                  <button id="${e+150}" class="icon" onclick="deleteTask(${e})" ><span title="Eliminar" class="material-symbols-outlined">delete</span></button>
                                  <button id="${e+200}" class="icon" onclick="setPriority(${e})" ><span title="Prioridad alta" class="material-symbols-outlined">priority_high</span></button>
                                </div>`);l.innerHTML=a.join(""),t.forEach((o,e)=>{if(o.state===!0){let s=e+100;document.getElementById(e).classList.add("task--done"),document.getElementById(s).checked=!0}if(o.priority==="high"){let s=e+150,i=e+200;document.getElementById(e).classList.add("priority--high"),document.getElementById(s).classList.add("icon--priority"),document.getElementById(i).classList.add("icon--priority")}}),t.forEach(o=>n.push(o))}};$();window.newTask=()=>{let a={description:inputText.value,state:!1,priority:"low"};n.push(a),localStorage.setItem("tasks",JSON.stringify(n)),m()};const m=()=>{l.innerHTML=" ";const t=JSON.parse(localStorage.getItem("tasks")),a=t.map((o,e)=>`<div id="${e}" class="task animate__animated">
                                <div class="form-check">
                                  <input onchange="done(${e})" value="true" class="form-check-input" type="checkbox" id="${e+100}">
                                    <label class="form-check-label" for="defaultCheck1"> <p class="h5">${o.description}</p></label>
                                    
                                </div>
                                  
                                  <button id="${e+150}" class="icon" onclick="deleteTask(${e})" ><span title="Eliminar" class="material-symbols-outlined">delete</span></button>
                                  <button id="${e+200}" class="icon" onclick="setPriority(${e})" ><span title="Prioridad alta" class="material-symbols-outlined">priority_high</span></button>
                                </div>`);inputText.value="",l.innerHTML=a.join(""),t.forEach((o,e)=>{if(o.state===!0){let s=e+100;document.getElementById(e).classList.add("task--done"),document.getElementById(s).checked=!0}if(o.priority==="high"){let s=e+150,i=e+200;document.getElementById(e).classList.add("priority--high"),document.getElementById(s).classList.add("icon--priority"),document.getElementById(i).classList.add("icon--priority")}})};window.deleteTask=t=>{document.getElementById(t).classList.add("animate__zoomOut"),setTimeout(()=>{n.splice(t,1),localStorage.setItem("tasks",JSON.stringify(n)),m()},500)};const w=t=>t.sort((o,e)=>o.priority<e.priority?-1:o.priority>e.priority?1:0);window.setPriority=t=>{let a=t+150,o=t+200;n[t].priority==="low"?n[t].priority="high":n[t].priority="low",n[t].priority==="high"?(document.getElementById(t).classList.add("priority--high"),document.getElementById(a).classList.add("icon--priority"),document.getElementById(o).classList.add("icon--priority")):(document.getElementById(t).classList.remove("priority--high"),document.getElementById(a).classList.remove("icon--priority"),document.getElementById(o).classList.remove("icon--priority")),w(n),localStorage.setItem("tasks",JSON.stringify(n)),setTimeout(()=>{m()},400)};window.done=t=>{n[t].state===!1?n[t].state=!0:n[t].state=!1,n[t].state===!0?document.getElementById(t).classList.add("task--done"):document.getElementById(t).classList.remove("task--done"),localStorage.setItem("tasks",JSON.stringify(n))};S();
